0.031161395693832056,
0.03806381792502686 ,
0.035801649764691135,
0.019999888919519454,
0.025476564699668417,
0.0445836190353984,
0.1025037427051341,
0.05709359054832678,
0.04742054567703595,
0.06633644158980856,
0.05949043399123926,
0.041384144630825126,
0.053634015904741233,
0.04371516892321466,
0.04832728562035856,
0.03846508445156618,
0.027703417421580404,
0.04807851751804035,
0.04748252698136803,
0.053851180276463795,
0.04956363523475487,
0.0636326273023792,
0.062575827531951,
0.06393300921248209,
0.020745270437897177,
0.017718047199770517)
plot(epoch,spacing2,type='l')
spacing <- spacing2
plot(epoch,spacing1,type='l')
plot(epoch,spacing,type='l')
r <- c(1,2,3)
is.integer(r)
is.double(r)
r <- c(1L,2L,3L)
r
is.integer(r)
is.double(r)
lst <- list(351,6164)
lst
c(lst)
r <- c(lst)
r
r[1]
y <- 1:10
attr(y,'attr1') <- 'cont'
y
structure(1:10,attr1='content')
names(lst) <- c('1','3')
ls
slt
lst
df <- data.frame(x=c(1,2,3),y=c('st','t','asdf'))
df
df[[1]]
knitr::opts_chunk$set(echo = TRUE)
exact.data <- read.table('Reliability.txt',sep='|')
exact.data
exact.data <- read.table('Reliability.txt',sep='|',header=T)
exact.data
exact.data <- read.table('Reliability.txt',sep='|',header=T)
exact.data
simu.data <- read.csv('Reliability_simulation.csv',header=T)
simu.data
simu.data[,1500]
simu.data[1500,]
simu.data[1:1500,]
exact.data <- read.table('Reliability.txt',sep='|',header=T)
exact.data
simu.data <- read.csv('Reliability_simulation.csv',header=T)
simu.data <- simu.data[1:1500,]
simu.data
tail(simu.data)
tail(exact.data)
plot(exact.data$Maintenance.Interval,exact.data$Reliability)
plot(exact.data$Maintenance.Interval,exact.data$Reliability,type='l')
plot(exact.data$Maintenance.Interval,exact.data$Reliability,type='l')
plot(simu.data$Maintenance.Interval,simu.data$Reliability,type='l')
mod <- lm(Reliability~Maintenance.Interval,data=exact.data)
summary(mod)
plot(exact.data$Maintenance.Interval,exact.data$Reliability,type='l')
points(simu.data$Maintenance.Interval,simu.data$Reliability,type='l',col='red')
plot(exact.data$Maintenance.Interval,exact.data$Reliability,type='l')
points(simu.data$Maintenance.Interval,simu.data$Reliability,type='l',col='red',alpha=0.5)
plot(exact.data$Maintenance.Interval,exact.data$Reliability,type='l')
points(simu.data$Maintenance.Interval,simu.data$Reliability,type='l',col=rgb(1,0,0,0.5))
plot(exact.data$Maintenance.Interval,exact.data$Reliability,type='l',col=rgb(0,0,1,0.8))
points(simu.data$Maintenance.Interval,simu.data$Reliability,type='l',col=rgb(1,0,0,0.4))
plot(exact.data$Maintenance.Interval,exact.data$Reliability,type='l')
points(simu.data$Maintenance.Interval,simu.data$Reliability,type='l',col=rgb(1,0,0,0.4))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
p1 <- ggplot(data=exact.data,aes(Maintenance.Interval,Reliability)) +
geom_line(aes(Maintenance.Interval,Reliability)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$Reliability),color=rgb(1,0,0,0.4)) +
xlab("") + ylim(c(2e+05,1e+06)) +
theme_classic() + ylab('Total Value') + ggtitle("Boxplot for Standard Instance")
p1
p1 <- ggplot(data=exact.data,aes(Maintenance.Interval,Reliability)) +
geom_line(aes(Maintenance.Interval,Reliability)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$Reliability),color=rgb(1,0,0,0.4)) +
xlab("") +
theme_classic() + ylab('Total Value') + ggtitle("Boxplot for Standard Instance")
p1
p1 <- ggplot(data=exact.data,aes(Maintenance.Interval,Reliability)) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Reliability)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$Reliability),color=rgb(1,0,0,0.4)) +
xlab("") +
theme_classic() + ylab('Total Value') + ggtitle("Boxplot for Standard Instance")
p1
p1 <- ggplot(data=NULL) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Reliability)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$Reliability),color=rgb(1,0,0,0.4)) +
xlab("") +
theme_classic() + ylab('Total Value') + ggtitle("Boxplot for Standard Instance")
p1
p1 <- ggplot(data=NULL) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Reliability)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$Reliability),color=rgb(1,0,0,0.4)) +
xlab("Time") + ylab('Reliability') +
theme_classic() + ggtitle("Reliability Reduction")
p1
p1 <- ggplot(data=NULL) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Reliability)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$Reliability),color=rgb(1,0,0,0.4)) +
xlab("Time") + ylab('Reliability') +
theme_classic() + ggtitle("Reliability Reduction")
p1
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
exact.data <- read.table('Reliability.txt',sep='|',header=T)
exact.data
simu.data <- read.csv('Reliability_simulation.csv',header=T)
simu.data <- simu.data[1:1500,]
simu.data
p1 <- ggplot(data=NULL) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Reliability)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$Reliability),color=rgb(1,0,0,0.4)) +
xlab("Time") + ylab('Reliability') +
theme_classic() + ggtitle("Reliability Reduction")
p1
ggsave('p1.png',width=12,height=10)
p1 <- ggplot(data=NULL) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Reliability)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$Reliability),color=rgb(1,0,0,0.4)) +
xlab("Time") + ylab('Reliability') +
theme_classic() + ggtitle("Reliability Reduction")
p1
ggsave('p1.png',width=6,height=5)
mod
mod$coefficients
summary(mod)
0.1015/2
p2 <- ggplot(data=NULL) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Program.Computation.Time)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$InterTime),color=rgb(1,0,0,0.4)) +
xlab("Time") + ylab('Calculation Time') +
theme_classic() + ggtitle("Reliability Reduction")
p2
p2 <- ggplot(data=NULL) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Program.Computation.Time)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$InterTime),color=rgb(1,0,0,0.4)) +
xlab("Time") + ylab('Calculation Time (in seconds)') +
theme_classic() + ggtitle("Reliability Reduction")
p2
p2 <- ggplot(data=NULL) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Program.Computation.Time)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$InterTime),color=rgb(1,0,0,0.4)) +
xlab("Time") + ylab('Calculation Time (in seconds)') +
theme_classic() + ggtitle("Calculation Time")
p2
p2 <- ggplot(data=NULL) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Program.Computation.Time)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$InterTime),color=rgb(1,0,0,0.4)) +
xlab("Time") + ylab('Calculation Time (in seconds)') +
theme_classic() + ggtitle("Calculation Time")
p2
p2 <- ggplot(data=NULL) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Program.Computation.Time)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$InterTime),color=rgb(1,0,0,0.4)) +
xlab("Time (in model)") + ylab('Calculation Time (in seconds)') +
theme_classic() + ggtitle("Calculation Time")
p2
p2 <- ggplot(data=NULL) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Program.Computation.Time)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$InterTime),color=rgb(1,0,0,0.4)) +
xlab("Time (years in model)") + ylab('Calculation Time (seconds)') +
theme_classic() + ggtitle("Calculation Time")
p2
p2 <- ggplot(data=NULL) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Program.Computation.Time)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$InterTime),color=rgb(1,0,0,0.4)) +
xlab("Time (years in model)") + ylab('Calculation Time (seconds)') +
theme_classic() + ggtitle("Calculation Time")
p2
ggsave('p2.png',width=6,height=5)
hist(exact.data$Program.Computation.Time)
hist(exact.data$Program.Computation.Time)
summary(exact.data$Program.Computation.Time)
quantile(exact.data$Program.Computation.Time,.95)
boxplot(exact.data$Program.Computation.Time)
p2 <- ggplot(data=NULL) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Program.Computation.Time)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$InterTime),color=rgb(1,0,0,0.4)) +
xlab("Time (years in model)") + ylab('Computation Time (seconds)') +
theme_classic() + ggtitle("Computation Time")
p2
ggsave('p2.png',width=6,height=5)
nsga <- read.table('NSGA_LOG.txt',sep=',')
nsga
nsga <- read.table('NSGA_LOG.txt',sep=',')
colnames(nsga) <- c('epoch','spacing','time')
p3 <- ggplot(data=NULL) +
geom_line(aes(nsga$epoch,nsga$spacing))+
xlab("Time (years in model)") + ylab('Computation Time (seconds)') +
theme_classic() + ggtitle("Computation Time")
p3
ggsave('p2.png',width=6,height=5)
p2 <- ggplot(data=NULL) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Program.Computation.Time)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$InterTime),color=rgb(1,0,0,0.4)) +
xlab("Time (years in model)") + ylab('Computation Time (seconds)') +
theme_classic() + ggtitle("Computation Time")
p2
ggsave('p2.png',width=6,height=5)
nsga <- read.table('NSGA_LOG.txt',sep=',')
colnames(nsga) <- c('epoch','spacing','spacing_pop','time')
p3 <- ggplot(data=NULL) +
geom_line(aes(nsga$epoch,nsga$spacing))+
geom_line(aes(nsga$epoch,nsga$spacing_pop))+
xlab("Time (years in model)") + ylab('Computation Time (seconds)') +
theme_classic() + ggtitle("Computation Time")
p3
ggsave('p3.png',width=6,height=5)
p3 <- ggplot(data=NULL) +
geom_line(aes(nsga$epoch,nsga$spacing))+
geom_line(aes(nsga$epoch,nsga$spacing_pop),col='red')+
xlab("Time (years in model)") + ylab('Computation Time (seconds)') +
theme_classic() + ggtitle("Computation Time")
p3
ggsave('p3.png',width=6,height=5)
p3 <- ggplot(data=NULL) +
geom_line(aes(nsga$epoch,nsga$spacing),col='blue')+
geom_line(aes(nsga$epoch,nsga$spacing_pop),col='red')+
xlab("Time (years in model)") + ylab('Computation Time (seconds)') +
theme_classic() + ggtitle("Computation Time")
p3
ggsave('p3.png',width=6,height=5)
0.8^100
0.8^50
0.820
0.8^20
0.95^100
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
exact.data <- read.table('Reliability.txt',sep='|',header=T)
exact.data
simu.data <- read.csv('Reliability_simulation.csv',header=T)
simu.data <- simu.data[1:1500,]
simu.data
p1 <- ggplot(data=NULL) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Reliability)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$Reliability),color=rgb(1,0,0,0.4)) +
xlab("Time") + ylab('Reliability') +
theme_classic() + ggtitle("Reliability Reduction")
p1
ggsave('p1.png',width=6,height=5)
p2 <- ggplot(data=NULL) +
geom_line(aes(exact.data$Maintenance.Interval,exact.data$Program.Computation.Time)) +
geom_line(aes(simu.data$Maintenance.Interval,simu.data$InterTime),color=rgb(1,0,0,0.4)) +
xlab("Time (years in model)") + ylab('Computation Time (seconds)') +
theme_classic() + ggtitle("Computation Time")
p2
ggsave('p2.png',width=6,height=5)
nsga <- read.table('NSGA_LOG.txt',sep=',')
colnames(nsga) <- c('epoch','spacing','spacing_pop','time')
p3 <- ggplot(data=NULL) +
geom_line(aes(nsga$epoch,nsga$spacing),col='blue')+
geom_line(aes(nsga$epoch,nsga$spacing_pop),col='red')+
xlab("Time (years in model)") + ylab('Computation Time (seconds)') +
theme_classic() + ggtitle("Computation Time")
p3
ggsave('p3.png',width=6,height=5)
p3 <- ggplot(data=NULL) +
geom_line(aes(nsga$epoch,nsga$spacing))+
xlab("Time (years in model)") + ylab('Computation Time (seconds)') +
theme_classic() + ggtitle("Computation Time")
p3
ggsave('p3.png',width=6,height=5)
p3 <- ggplot(data=NULL) +
geom_line(aes(nsga$epoch,nsga$spacing))+
xlab("Epoch") + ylab('Spacing Metric of Pareto Front Solutions') +
theme_classic() + ggtitle("Spacing")
p3
ggsave('p3.png',width=6,height=5)
p4 <- ggplot(data=NULL) +
geom_line(aes(nsga$epoch,nsga$time))+
xlab("Epoch") + ylab('Computation Time (in seconds)') +
theme_classic() + ggtitle("Computation Time")
p4
ggsave('p4.png',width=6,height=5)
nr <- (1-0.98)*114
1-0.154
nr
1-0.171
lz <- nr/25
lz
z <- 0.96
mu <- 124-25*z
mu
pnorm(124,100,25)
1-0.831
1-pnorm(124,100,25)
fr <- nr +1
fr
dnorm(135,35,10)
dnorm((135-35)/10)
dnorm305,35,10)
dnorm(30,35,10)
dnorm((30-35)/10)
10*sqrt(-log(1-0.25))
10*sqrt(-log(1-0.75))
x <- c(1.75,2.05,2.35,2.7,2.95,3.1,3.3,3.55,3.85,4.1)
mean(x)
4+.2*.327
2.5+.4*.121
225-44
181/5
111.6-36.2
44+174+214
432/3
44+174+214+224+229
885/5
174+214+224+229+225
1066/5
x <- c(2.83,2.5,4.83,2.58,0.58,3.42,1.83,4.25,0,1.33)
mean(x)
var(x)
1.8331*sqrt(2.35/10)
1.532^2
x <- c(.31,6.1)
y <- c(.43,6.79)
sqrt(sum(x^2-y^2))
(sum(x^2-y^2))
(sum((x-y)^2))
sqsrt(0.4905)
sqrt(0.4905)
2+1+2.5+1
sc <- 6.5
ee <- 2
sc <- sc+4+3
ee <- ee+3+1+1+1.5
sc <- sc + 2
ee <- ee+1.5
ee
sc <-sc+.5+1+3.5
sc
ppc <- 1.5+1.5+1.5+2+2
ppc <- ppc +2.5+5.5+2.5+2+2.5+1.5+1+3.5
ppc
ml <- 4.5+2+1
ies <- 3
ml <- ml+4.5+3+.5
ml <- ml+3+4+.5
ies <- ies+2
ms <- 2
ml <- ml+2+2
ies <- ies+2.5
ms <- ms+2
ies
ml
ms
x <- c(.2,.3,.2,.1,.2,.1)
y <- c(1,.8,.7,.6,.3,.2)
x*y
sum(x*y)
sum(x*y)
f<-function(a,b){return (sqrt(a^2+b^2))}
f(0.1,0.1)
f(0.2,0.3)
f(0.1,0.1)
f(0.2,0.1)
f(0.2,0.3)
mean(c(0.14,0.36,0.14,0.22,0.36))
d <- c(0.14,0.36,0.14,0.22,0.36)
sum(abs(d-mean(d)))
(0.464+0.1)/(0.1+sum(d))
(0.464+0.2)/(0.2+sum(d))
f(1.6,2.7)
f(0.1,0)
f(0.2,0)
(0.464+0.3)/(0.3+sum(d))
abs(d-mean(d))
(0.464+0.3)/(0.3+5*mean(d))
d <- c(f(0.1,0.1),f(0.2,0.3),f(0.1,0.1),f(0.2,0.1),f(0.2,0.3))
(sum(abs(d-mean(d)))+0.3)/(0.3+sum(d))
d
sqrt(1.25+4+.25)
sqrt(1.25+4+.25)/5
sqrt(1.25+4+.25)/6
sqrt(1.25+4+.25)/5
x <- matrix(runif(4),2,2)
cov(x)
t(x)%*%(x)
x%*%t(x)
x%*%t(x)/2
cov(x)*3
x <- matrix(runif(8),2,4)
x
x <- matrix(runif(8),4,2)
cov(x)
x%*%t(x)
t(x)%*%x
t(x-mean(x))%*%(x-mean(x))
x-mean(x)
x <- matrix(c(1,2,3,4,2,4,5,6),2,4)
x
x <- matrix(c(1,2,3,4,2,4,5,6),4,2)
x
cov(x)
cov(x)*3
x <- matrix(c(1-1.5,2-3,3-4,4-5,2-1.5,4-3,5-4,6-5),4,2)
cov(x)*3
t(x)%*%x
t(x)%*%x/4
x
cov(x)
t(x)%*%x/2
t(x)%*%x
3.25/0.0625
t(x)
t(x)%*%x
cov(x)
3.25/0.0625
x
cov(t(x))
x%*%t(x)
t(x)
qt(1-0.05/2,10)
qt(0.05/2,10)
half <- function(n,sd){
return (qt(1-0.05/2,n-1)*sqrt(sd^2/n))
}
half(5,0.033)/0.708
half(5,0.033)
half(5,0.032)/0.750
half(10,0.032)/0.750
half(20,0.029)/0.800
half(40,0.027)/0.840
9.5+12.5
6.5+29.5
1/(1+exp(-4))
1/(1+exp(4))
1/(1+exp(-2.2))
2.9-4.6
1/(1+exp(1.7))
4.5*0.9-5.2*0.15-2
1/(1+exp(-1.27))
0.004*.8
0.996*.1
0.996*.1+0.0032
0.004*.8/0.1028
x <- runif(1000,-1,1)
plot(density(x))
qqnorm(x)
qt(0.95,9)
qnorm(0.95)
qt(0.95,13)
install.packages("D:/LIFE/WORK/4-University/Research/Rcvxcluster_cont/robustcvxclustr_1.1.1.tar.gz", repos = NULL, type = "source")
library(MASS)
library(clues)
library(cvxclustr)
library(Rcvxcluster)
library(robustcvxclustr)
set.seed(1234) # maybe should be a variable later
N=25 #?
p=20 #?
# mvrnorm: multivariate normal distribution
mu1 <- mvrnorm(mu=rep(0,p),Sigma = diag(1,p))
X1 <- mvrnorm(N,mu=mu1,Sigma=diag(1,p))
mu2 <- mvrnorm(mu=rep(5,p),Sigma = diag(1,p))
X2 <- mvrnorm(N,mu=mu2,Sigma=diag(1,p))
X <- rbind(X1, X2) # dim(X) = 2*N p
n = dim(X)[1] # why not n=2*N directly?
outliers <- sample(c(runif(n=5,min=20,max=50),runif(n=5,min=-50,max=-20)))
X[sample(1:(n*p),10)] <- outliers # put outliers randomly in X
wt <- robust_weights(X,15,.1)
H.ori <- Huber_ADMM(X,wt=wt)
H.cpp <-robustcvxclust(X,rho=1,tau=3,lambda=.5,wt=wt)
H.ori$V[49,]
H.cpp$V[49,]
plot(H.ori$V,H.cpp$V)
A.ori <- create_adjacency(t(H.ori$V),wt,n,'admm')
A.cpp <- create_adjacency_matrix(t(H.cpp$V),wt,n)
cl.ori <- find_clusters(A.ori)
cl.cpp <- find_clusters(A.cpp)
cl.ori
cl.cpp
H.ori <- Huber_ADMM(X,lam=0.7,wt=wt)
H.cpp <- robustcvxclust(X,rho=1,tau=3,lambda=0.7,wt=wt)
A.ori <- create_adjacency(t(H.ori$V),wt,n,'admm')
> A.cpp <- create_adjacency_matrix(t(H.cpp$V),wt,n)
> cl.ori <- find_clusters(A.ori)
> cl.cpp <- find_clusters(A.cpp)
A.cpp <- create_adjacency_matrix(t(H.cpp$V),wt,n)
cl.ori <- find_clusters(A.ori)
cl.cpp <- find_clusters(A.cpp)
cl.ori
cl.cpp
setwd('D:\\LIFE\\WORK\\4-University\\Research\\Rcvxcluster_cont\\robustcvxclustr')
library(devtools)
devtools::document()
devtools::build()
