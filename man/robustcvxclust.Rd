% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/robustcvxclust.R
\name{robustcvxclust}
\alias{robustcvxclust}
\title{Robust Convex Clustering}
\usage{
robustcvxclust(
  X,
  W = NULL,
  V = NULL,
  Y = NULL,
  Z = NULL,
  max_iter = 1e+05,
  rho,
  tau,
  lambda,
  wt,
  tol_abs = 1e-05
)
}
\arguments{
\item{X}{The n-by-p data matrix whose rows are being clustered.}

\item{W}{The n-by-p matrix of Lagrange multipliers.}

\item{V}{The centroid difference matrix.}

\item{Y}{The nK-by-p matrix of Lagrange multipliers.}

\item{Z}{The n-by-p matrix of Lagrange multipliers.}

\item{max_iter}{The maximum number of iterations. The default value is 1e5.}

\item{rho}{Augmented Lagrangian penalty parameter.}

\item{tau}{The robustification parameter in huber loss.}

\item{lambda}{The regularization parameter controlling the amount of shrinkage.}

\item{wt}{A vector of nK positive weights.}

\item{tol_abs}{The convergence tolerance. The default value is 1e-05.}
}
\value{
\code{U} The centroid matrix.

\code{W} The centroid matrix.

\code{V} The centroid difference matrix.

\code{Y} The Lagrange multiplier matrix.

\code{Z} The Lagrange multiplier matrix.

\code{iter} The number of iterations taken.

\code{tol} The residual tolerances.
}
\description{
\code{robustcvxclust} performs robust convex clustering using ADMM. This is an R wrapper function around C code.
Dimensions of various arguments are as follows:
\itemize{
\item{n is the number of data observations}
\item{p is the number of features}
\item{nK is the number non-zero weights.}
}
}
\examples{
## Create random problems
p <- 10
n <- 20
seed <- 1234
mu1 <- rnorm(p,0,1)
X1 <- mvrnorm((n/2),mu=mu1,Sigma=diag(1,p))
mu2 <- c(rnorm(p/2,3,1),rnorm(p/2,-3,1))
X2 <- mvrnorm((n/2),mu=mu2,Sigma=diag(1,p))
X <- rbind(X1,X2)
out.percent <- 0.06
n.out <- as.integer(n*out.percent)
nth <- sort(sample.int(n.out,1:n))
for(i in nth){
 outliers <- sample(runif(n=p*0.2,min = 10,max = 20))
 X[i,sample(p)[1:(p*0.2)]] <- outliers
}
wt <- rep(1,n*(n+1)/2)
rho <- 1
tau <- 3
lambda <- seq(0,5,1)
results <- list()
for (i in lambda){
  results[[i]]<- robustcvxclust(X,W,V,Y,Z,max_iter,rho,tau,i,wt,tol_abs)
}
}
\author{
Chenyu Liu, Qiang Sun, Kean Ming Tan
}
